"use strict";(self.webpackChunkjaqstack_website=self.webpackChunkjaqstack_website||[]).push([[32],{1389:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"using-angular","title":"Using Angular","description":"Learn how to use Angular in the JAQ Stack ecosystem for building modern web applications.","source":"@site/docs/02-using-angular.md","sourceDirName":".","slug":"/using-angular","permalink":"/docs/using-angular","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/02-using-angular.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Using Java","permalink":"/docs/using-java"},"next":{"title":"Using NoSQL","permalink":"/docs/using-nosql"}}');var t=n(4848),i=n(8453);const o={},l="Using Angular",a={},c=[{value:"Overview",id:"overview",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Installation",id:"installation",level:3},{value:"Core Features",id:"core-features",level:2},{value:"Project Structure",id:"project-structure",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Environment Setup",id:"environment-setup",level:3},{value:"Angular Module",id:"angular-module",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Examples",id:"examples",level:2},{value:"Creating a Component",id:"creating-a-component",level:3},{value:"Service Implementation",id:"service-implementation",level:3},{value:"Model Definition",id:"model-definition",level:3},{value:"Routing",id:"routing",level:2},{value:"Testing",id:"testing",level:2},{value:"Unit Test Example",id:"unit-test-example",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Getting Help",id:"getting-help",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"using-angular",children:"Using Angular"})}),"\n",(0,t.jsx)(r.p,{children:"Learn how to use Angular in the JAQ Stack ecosystem for building modern web applications."}),"\n",(0,t.jsx)(r.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(r.p,{children:"Angular provides the frontend framework for JAQ Stack, offering a powerful and scalable solution for building single-page applications."}),"\n",(0,t.jsx)(r.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,t.jsx)(r.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Node.js 18 or higher"}),"\n",(0,t.jsx)(r.li,{children:"npm or yarn"}),"\n",(0,t.jsx)(r.li,{children:"Angular CLI"}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"# Install Angular CLI globally\r\nnpm install -g @angular/cli\r\n\r\n# Clone the repository\r\ngit clone https://github.com/jaqstack/jaqstack-angular.git\r\n\r\n# Navigate to the project\r\ncd jaqstack-angular\r\n\r\n# Install dependencies\r\nnpm install\r\n\r\n# Start the development server\r\nng serve\n"})}),"\n",(0,t.jsx)(r.h2,{id:"core-features",children:"Core Features"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Component-Based Architecture"}),": Modular and reusable components"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"TypeScript Support"}),": Type-safe development"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Routing"}),": Client-side navigation"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"HTTP Client"}),": API integration"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Forms"}),": Reactive and template-driven forms"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Testing"}),": Unit and integration testing"]}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"project-structure",children:"Project Structure"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"src/\r\n\u251c\u2500\u2500 app/\r\n\u2502   \u251c\u2500\u2500 components/          # Reusable components\r\n\u2502   \u251c\u2500\u2500 services/           # Business logic and API calls\r\n\u2502   \u251c\u2500\u2500 models/             # TypeScript interfaces\r\n\u2502   \u251c\u2500\u2500 guards/             # Route guards\r\n\u2502   \u251c\u2500\u2500 interceptors/       # HTTP interceptors\r\n\u2502   \u2514\u2500\u2500 shared/             # Shared utilities\r\n\u251c\u2500\u2500 assets/                 # Static assets\r\n\u251c\u2500\u2500 environments/           # Environment configurations\r\n\u2514\u2500\u2500 styles/                 # Global styles\n"})}),"\n",(0,t.jsx)(r.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsx)(r.h3,{id:"environment-setup",children:"Environment Setup"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-typescript",children:"// src/environments/environment.ts\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:8080/api',\r\n  appName: 'JAQ Stack',\r\n  version: '1.0.0'\r\n};\n"})}),"\n",(0,t.jsx)(r.h3,{id:"angular-module",children:"Angular Module"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-typescript",children:"// src/app/app.module.ts\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\n"})}),"\n",(0,t.jsx)(r.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Component Design"}),": Keep components small and focused"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Service Layer"}),": Use services for business logic"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Type Safety"}),": Leverage TypeScript features"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Performance"}),": Use OnPush change detection strategy"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Accessibility"}),": Follow WCAG guidelines"]}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(r.h3,{id:"creating-a-component",children:"Creating a Component"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-typescript",children:"// src/app/components/user-list/user-list.component.ts\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../services/user.service';\r\nimport { User } from '../../models/user.model';\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.css']\r\n})\r\nexport class UserListComponent implements OnInit {\r\n  users: User[] = [];\r\n  loading = false;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadUsers();\r\n  }\r\n\r\n  loadUsers(): void {\r\n    this.loading = true;\r\n    this.userService.getUsers().subscribe({\r\n      next: (users) => {\r\n        this.users = users;\r\n        this.loading = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading users:', error);\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n}\n"})}),"\n",(0,t.jsx)(r.h3,{id:"service-implementation",children:"Service Implementation"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-typescript",children:"// src/app/services/user.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../models/user.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  private apiUrl = 'http://localhost:8080/api/users';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getUsers(): Observable<User[]> {\r\n    return this.http.get<User[]>(this.apiUrl);\r\n  }\r\n\r\n  getUser(id: string): Observable<User> {\r\n    return this.http.get<User>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  createUser(user: User): Observable<User> {\r\n    return this.http.post<User>(this.apiUrl, user);\r\n  }\r\n\r\n  updateUser(id: string, user: User): Observable<User> {\r\n    return this.http.put<User>(`${this.apiUrl}/${id}`, user);\r\n  }\r\n\r\n  deleteUser(id: string): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\r\n  }\r\n}\n"})}),"\n",(0,t.jsx)(r.h3,{id:"model-definition",children:"Model Definition"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-typescript",children:"// src/app/models/user.model.ts\r\nexport interface User {\r\n  id?: string;\r\n  name: string;\r\n  email: string;\r\n  role: UserRole;\r\n  createdAt?: Date;\r\n  updatedAt?: Date;\r\n}\r\n\r\nexport enum UserRole {\r\n  ADMIN = 'admin',\r\n  USER = 'user',\r\n  GUEST = 'guest'\r\n}\n"})}),"\n",(0,t.jsx)(r.h2,{id:"routing",children:"Routing"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-typescript",children:"// src/app/app-routing.module.ts\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { UserListComponent } from './components/user-list/user-list.component';\r\nimport { UserDetailComponent } from './components/user-detail/user-detail.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/users', pathMatch: 'full' },\r\n  { path: 'users', component: UserListComponent },\r\n  { path: 'users/:id', component: UserDetailComponent },\r\n  { path: '**', redirectTo: '/users' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\n"})}),"\n",(0,t.jsx)(r.h2,{id:"testing",children:"Testing"}),"\n",(0,t.jsx)(r.h3,{id:"unit-test-example",children:"Unit Test Example"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-typescript",children:"// src/app/services/user.service.spec.ts\r\nimport { TestBed } from '@angular/core/testing';\r\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\r\nimport { UserService } from './user.service';\r\n\r\ndescribe('UserService', () => {\r\n  let service: UserService;\r\n\r\n  beforeEach(() => {\r\n    TestBed.configureTestingModule({\r\n      imports: [HttpClientTestingModule]\r\n    });\r\n    service = TestBed.inject(UserService);\r\n  });\r\n\r\n  it('should be created', () => {\r\n    expect(service).toBeTruthy();\r\n  });\r\n});\n"})}),"\n",(0,t.jsx)(r.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsx)(r.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Module Not Found"}),": Check import paths and module declarations"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"CORS Errors"}),": Configure CORS on the backend"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Build Errors"}),": Ensure all dependencies are installed"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Performance Issues"}),": Use Angular DevTools for profiling"]}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"getting-help",children:"Getting Help"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["Check the ",(0,t.jsx)(r.a,{href:"https://github.com/jaqstack/jaqstack-angular/issues",children:"GitHub Issues"})]}),"\n",(0,t.jsxs)(r.li,{children:["Join our ",(0,t.jsx)(r.a,{href:"https://discord.gg/jaqstack",children:"Discord Community"})]}),"\n",(0,t.jsxs)(r.li,{children:["Read the ",(0,t.jsx)(r.a,{href:"https://angular.io/docs",children:"Angular Documentation"})]}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"/docs/using-java",children:"Using Java"})," - Backend development"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"/docs/using-nosql",children:"Using NoSQL"})," - Database integration"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"/docs/devops",children:"DevOps"})," - Deployment and operations"]}),"\n"]})]})}function u(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>l});var s=n(6540);const t={},i=s.createContext(t);function o(e){const r=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(i.Provider,{value:r},e.children)}}}]);